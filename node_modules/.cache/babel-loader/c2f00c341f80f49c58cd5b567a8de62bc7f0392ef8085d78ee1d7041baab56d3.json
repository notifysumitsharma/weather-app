{"ast":null,"code":"var _jsxFileName = \"/Users/tannudhiman/Desktop/React-Projects/weather-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport WeatherCard from \"./components/WeatherCard/WeatherCard\";\nimport CitySelector from \"./components/CitySelector/CitySelector\";\nimport { Container } from \"react-bootstrap\";\nimport UseFetch from \"./components/Hooks/UseFetch\";\nimport { API_BASE_URL, API_KEY } from \"./apis/config\";\nimport WeatherList from \"./components/WeatherList/WeatherList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // destructured the returned value\n  const {\n    data,\n    error,\n    isLoading,\n    setUrl\n  } = UseFetch();\n  const Search = city => {\n    setUrl(`${API_BASE_URL}/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`);\n  };\n  const getContent = () => {\n    if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Error when fetching : \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }, this);\n    if (!data && isLoading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 36\n    }, this);\n    if (!data) return null;\n    return /*#__PURE__*/_jsxDEV(WeatherList, {\n      weathers: data.list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(CitySelector, {\n        onSearch: Search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), getContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","WeatherCard","CitySelector","Container","UseFetch","API_BASE_URL","API_KEY","WeatherList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","data","error","isLoading","setUrl","Search","city","getContent","children","fileName","_jsxFileName","lineNumber","columnNumber","weathers","list","className","onSearch","_c","$RefreshReg$"],"sources":["/Users/tannudhiman/Desktop/React-Projects/weather-app/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport WeatherCard from \"./components/WeatherCard/WeatherCard\";\nimport CitySelector from \"./components/CitySelector/CitySelector\";\nimport { Container } from \"react-bootstrap\";\nimport UseFetch from \"./components/Hooks/UseFetch\";\nimport { API_BASE_URL, API_KEY } from \"./apis/config\";\nimport WeatherList from \"./components/WeatherList/WeatherList\";\n\nfunction App() {\n  // destructured the returned value\n  const { data, error, isLoading, setUrl } = UseFetch();\n\n  const Search = (city) => {\n    setUrl(\n      `${API_BASE_URL}/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n    );\n  };\n\n  const getContent = () => {\n    if (error) return <h2> Error when fetching : {error}</h2>;\n    if (!data && isLoading) return <h2> Loading ...</h2>;\n    if (!data) return null;\n    return <WeatherList weathers={data.list} />;\n  };\n\n  return (\n    <>\n      <Container className=\"App\">\n        <CitySelector onSearch={Search} />\n        {getContent()}\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,YAAY,MAAM,wCAAwC;AACjE,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,SAASC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AACrD,OAAOC,WAAW,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EACb;EACA,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGZ,QAAQ,EAAE;EAErD,MAAMa,MAAM,GAAIC,IAAI,IAAK;IACvBF,MAAM,CACH,GAAEX,YAAa,wBAAuBa,IAAK,UAASZ,OAAQ,eAAc,CAC5E;EACH,CAAC;EAED,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIL,KAAK,EAAE,oBAAOL,OAAA;MAAAW,QAAA,GAAI,yBAAuB,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;IACzD,IAAI,CAACX,IAAI,IAAIE,SAAS,EAAE,oBAAON,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;IACpD,IAAI,CAACX,IAAI,EAAE,OAAO,IAAI;IACtB,oBAAOJ,OAAA,CAACF,WAAW;MAACkB,QAAQ,EAAEZ,IAAI,CAACa;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAC7C,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA,CAACN,SAAS;MAACwB,SAAS,EAAC,KAAK;MAAAP,QAAA,gBACxBX,OAAA,CAACP,YAAY;QAAC0B,QAAQ,EAAEX;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EACjCL,UAAU,EAAE;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH,iBACX;AAEP;AAACK,EAAA,GAzBQjB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}