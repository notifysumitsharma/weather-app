{"ast":null,"code":"var _jsxFileName = \"/Users/tannudhiman/Desktop/React-Projects/weather-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport WeatherCard from \"./components/WeatherCard/WeatherCard\";\nimport CitySelector from \"./components/CitySelector/CitySelector\";\nimport { Container } from \"react-bootstrap\";\nimport UseFetch from \"./components/Hooks/UseFetch\";\nimport { API_BASE_URL, API_KEY } from \"./apis/config\";\nimport WeatherList from \"./components/WeatherList/WeatherList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // destructured the returned value\n  const {\n    data,\n    error,\n    isLoading,\n    setUrl\n  } = UseFetch();\n  console.log(data);\n  const Search = city => {\n    setUrl(`${API_BASE_URL}/data/2.5/forecast?q=${city}&appid=${API_KEY}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(CitySelector, {\n        onSearch: Search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), data && /*#__PURE__*/_jsxDEV(WeatherList, {\n        weathers: data.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","WeatherCard","CitySelector","Container","UseFetch","API_BASE_URL","API_KEY","WeatherList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","data","error","isLoading","setUrl","console","log","Search","city","children","className","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","weathers","list","_c","$RefreshReg$"],"sources":["/Users/tannudhiman/Desktop/React-Projects/weather-app/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport WeatherCard from \"./components/WeatherCard/WeatherCard\";\nimport CitySelector from \"./components/CitySelector/CitySelector\";\nimport { Container } from \"react-bootstrap\";\nimport UseFetch from \"./components/Hooks/UseFetch\";\nimport { API_BASE_URL, API_KEY } from \"./apis/config\";\nimport WeatherList from \"./components/WeatherList/WeatherList\";\n\nfunction App() {\n  // destructured the returned value\n  const { data, error, isLoading, setUrl } = UseFetch();\n  console.log(data);\n\n  const Search = (city) => {\n    setUrl(`${API_BASE_URL}/data/2.5/forecast?q=${city}&appid=${API_KEY}`);\n  };\n\n  return (\n    <>\n      <Container className=\"App\">\n        <CitySelector onSearch={Search} />\n        {data && <WeatherList weathers={data.list} />}\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,YAAY,MAAM,wCAAwC;AACjE,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,SAASC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AACrD,OAAOC,WAAW,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EACb;EACA,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGZ,QAAQ,EAAE;EACrDa,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EAEjB,MAAMM,MAAM,GAAIC,IAAI,IAAK;IACvBJ,MAAM,CAAE,GAAEX,YAAa,wBAAuBe,IAAK,UAASd,OAAQ,EAAC,CAAC;EACxE,CAAC;EAED,oBACEG,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACEZ,OAAA,CAACN,SAAS;MAACmB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBACxBZ,OAAA,CAACP,YAAY;QAACqB,QAAQ,EAAEJ;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EACjCd,IAAI,iBAAIJ,OAAA,CAACF,WAAW;QAACqB,QAAQ,EAAEf,IAAI,CAACgB;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACnC,iBACX;AAEP;AAACG,EAAA,GAjBQlB,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}